{"ast":null,"code":"var _jsxFileName = \"/Users/simon/Documents/GitHub/csil-test/src/components/Software.jsx\";\nimport React from \"react\";\nimport softwares from \"./softwares.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Software extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: \"\",\n      softwares: softwares.softwares\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        query: e.target.value\n      }, () => {\n        for (let i = 0; i < this.state.softwares.length; i++) {\n          if (e.target.value.trim() !== \"\" && this.state.softwares[i].toLowerCase().includes(e.target.value.toLowerCase())) {\n            this.setState({\n              [\"s\" + i.toString() + \"IsActive\"]: true\n            });\n          } else {\n            this.setState({\n              [\"s\" + i.toString() + \"IsActive\"]: false\n            });\n          }\n        }\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rowWithMargin verticalPaddingM col\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"montserrat bold regBlueText\",\n          children: \"AVAILABLE SOFTWARE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"redText xxlText\",\n          children: \"Learn more about what software we offer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Search our resources\",\n          className: \"searchInput\",\n          onChange: this.handleChange,\n          value: this.state.query\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rowM\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"triL\",\n            children: this.state.softwares.map((software, softwareIndex) => {\n              return softwareIndex < this.state.softwares.length / 3 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"softwareListText\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    background: this.state[\"s\" + softwareIndex.toString() + \"IsActive\"] ? \"yellow\" : \"transparent\"\n                  },\n                  children: software\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this) : null;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tri\",\n            children: this.state.softwares.map((software, softwareIndex) => {\n              return softwareIndex < this.state.softwares.length / 3 * 2 && softwareIndex >= this.state.softwares.length / 3 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"softwareListText\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    background: this.state[\"s\" + softwareIndex.toString() + \"IsActive\"] ? \"yellow\" : \"transparent\"\n                  },\n                  children: software\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this) : null;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"triR\",\n            children: this.state.softwares.map((software, softwareIndex) => {\n              return softwareIndex >= this.state.softwares.length / 3 * 2 && softwareIndex < this.state.softwares.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"softwareListText\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    background: this.state[\"s\" + softwareIndex.toString() + \"IsActive\"] ? \"yellow\" : \"transparent\"\n                  },\n                  children: software\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this) : null;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Software;","map":{"version":3,"sources":["/Users/simon/Documents/GitHub/csil-test/src/components/Software.jsx"],"names":["React","softwares","Software","Component","state","query","handleChange","e","setState","target","value","i","length","trim","toLowerCase","includes","toString","componentDidMount","render","map","software","softwareIndex","background"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport softwares from \"./softwares.json\";\n\nclass Software extends React.Component {\n  state = {\n    query: \"\",\n    softwares: softwares.softwares,\n  };\n  componentDidMount() {}\n  handleChange = (e) => {\n    this.setState({ query: e.target.value }, () => {\n      for (let i = 0; i < this.state.softwares.length; i++) {\n        if (\n          e.target.value.trim() !== \"\" &&\n          this.state.softwares[i]\n            .toLowerCase()\n            .includes(e.target.value.toLowerCase())\n        ) {\n          this.setState({ [\"s\" + i.toString() + \"IsActive\"]: true });\n        } else {\n          this.setState({ [\"s\" + i.toString() + \"IsActive\"]: false });\n        }\n      }\n    });\n  };\n  render() {\n    return (\n      <div className=\"main\">\n        <div className=\"rowWithMargin verticalPaddingM col\">\n          <br />\n          <br />\n          <p className=\"montserrat bold regBlueText\">AVAILABLE SOFTWARE</p>\n\n          <p className=\"redText xxlText\">\n            Learn more about what software we offer\n          </p>\n          <input\n            placeholder=\"Search our resources\"\n            className=\"searchInput\"\n            onChange={this.handleChange}\n            value={this.state.query}\n          ></input>\n          <br />\n          <div className=\"rowM\">\n            <div className=\"triL\">\n              {this.state.softwares.map((software, softwareIndex) => {\n                return softwareIndex < this.state.softwares.length / 3 ? (\n                  <p className=\"softwareListText\">\n                    <span\n                      style={{\n                        background: this.state[\n                          \"s\" + softwareIndex.toString() + \"IsActive\"\n                        ]\n                          ? \"yellow\"\n                          : \"transparent\",\n                      }}\n                    >\n                      {software}\n                    </span>\n                  </p>\n                ) : null;\n              })}\n            </div>\n            <div className=\"tri\">\n              {this.state.softwares.map((software, softwareIndex) => {\n                return softwareIndex < (this.state.softwares.length / 3) * 2 &&\n                  softwareIndex >= this.state.softwares.length / 3 ? (\n                  <p className=\"softwareListText\">\n                    <span\n                      style={{\n                        background: this.state[\n                          \"s\" + softwareIndex.toString() + \"IsActive\"\n                        ]\n                          ? \"yellow\"\n                          : \"transparent\",\n                      }}\n                    >\n                      {software}\n                    </span>\n                  </p>\n                ) : null;\n              })}\n            </div>\n            <div className=\"triR\">\n              {this.state.softwares.map((software, softwareIndex) => {\n                return softwareIndex >= (this.state.softwares.length / 3) * 2 &&\n                  softwareIndex < this.state.softwares.length ? (\n                  <p className=\"softwareListText\">\n                    <span\n                      style={{\n                        background: this.state[\n                          \"s\" + softwareIndex.toString() + \"IsActive\"\n                        ]\n                          ? \"yellow\"\n                          : \"transparent\",\n                      }}\n                    >\n                      {software}\n                    </span>\n                  </p>\n                ) : null;\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Software;\n"]},"metadata":{},"sourceType":"module"}